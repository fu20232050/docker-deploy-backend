name: Deploy backend to host

on:
  push:
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # 检出代码仓库

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
        # 设置 Java 17 环境

      - name: Run Maven build
        run: |
          mvn clean install -DskipTests -B
          mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)
        # 运行 Maven 构建命令，跳过测试并解压依赖文件

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # 设置 QEMU，用于多架构镜像构建

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # 设置 Docker Buildx，用于高级 Docker 构建功能

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        # 登录到 Docker Hub，使用存储在 secrets 中的用户名和密码

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/234-deploylab-backend:latest
        # 构建并推送 Docker 镜像到 Docker Hub，使用存储在 secrets 中的用户名作为镜像名称

      - name: Copy docker-compose.yml via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/ubuntu/backend"
        # 通过 SSH 将 docker-compose.yml 文件复制到远程服务器

      - name: Run docker-compose on remote server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/backend
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d
            rm -rf /home/ubuntu/backend
        # 通过 SSH 连接到远程服务器，登录到 Docker Hub，拉取最新的镜像，启动容器，并清理目录